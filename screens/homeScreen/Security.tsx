import React, { useState } from 'react';
import { View } from 'react-native';
import { Title, Text, withTheme, Switch, ActivityIndicator } from 'react-native-paper';
import { connect } from 'react-redux';
import { sitelink, sitename } from '../../defaults';
import { useIsFocused } from '@react-navigation/native';
import axios from 'axios';
import { userLoggedIn_update } from '../../actions/userActions'
import Toast from 'react-native-root-toast';

const Security = ({theme,twofa,username,token,userLoggedIn_update}) => {
    const [loading,loadingSet] =  useState(false)
    let twofaResult;
    let twofaText;
    let fa:number;
    if (twofa == '0') {
         twofaResult= false
         twofaText='turn on';
         fa =1
    }else{
         twofaResult= true
         twofaText='turn off'
         fa=0
    }

    const handleTwoFaChange = async () => {
        loadingSet(true)
        await axios.post(`https://api.${sitelink}/user/fahandle`, {
            username:username,
            facheck:fa
        },{
            headers:{
                'Content-type':'application/json'
            }
        }

        ).then(
            res=> {
                loadingSet(false)
                userLoggedIn_update({username:username,token:token})
            }
        ).catch(e => {
                loadingSet(false)
                Toast.show('network error',{
                duration: Toast.durations.LONG,
            })
        })
    }   
    return (
        <View style={{marginTop:30, marginLeft:20,marginRight:20}}>
                <View>
                    <Title style={{fontWeight:'bold',fontSize:28}}>
                        Security
                    </Title>
                </View>
                <View style={{marginTop:25,marginBottom:25}}>
                    <Text>
                        From here you can review your acoount Security features and make security features
                    </Text>
                </View>

                <View style={{borderTopWidth:2,borderTopColor:theme.colors.primary}}>
                   <View style={{marginTop:15}}>
                       <Title>
                           Two-Step Verification
                       </Title>
                   </View>
                   <View style={{flexDirection:'row',justifyContent:'flex-start'}}>
                       <Switch value={twofaResult} onValueChange={handleTwoFaChange}
                        color={theme.colors.primary}/>
                       <Text>{loading == true ? <ActivityIndicator size="small" /> : twofaText}</Text>
                   </View>
                   <View style={{marginTop:30}}>
                       <Text style={{fontSize:15}}>
                           with two step verification,
                            only you can access your account,even when someone else has your password
                       </Text>
                   </View>
                   <View style={{marginTop:30}}>
                       <Title style={{fontWeight:'bold',fontSize:28}}>How Does this Work?</Title>
                       <Text style={{fontSize:15}}>
                            When you login to your {sitename} app, you will need to enter 
                            your password and code generated by email 
                       </Text>
                   </View>
                </View>
        </View>
    )
}
const mapStateToProps = (state) => {
    const {user,token} = state.Users;
    return {
        twofa:user.fa,
        username:user.username,
        token:token
    }
}
export default connect(mapStateToProps,{userLoggedIn_update})(withTheme(Security));